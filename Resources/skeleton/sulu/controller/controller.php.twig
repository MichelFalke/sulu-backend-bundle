<?php

{% block namespace %}
namespace {{ namespace }}\Controller{{ entity_namespace ? '\\' ~ entity_namespace : '' }};
{% endblock %}

{% block use %}
use {{ namespace }}\Entity\{{ entity }};
use FOS\RestBundle\Routing\ClassResourceInterface;
use FOS\RestBundle\Controller\Annotations\NamePrefix;
use L91\Sulu\Bundle\BackendBundle\Controller\AbstractBackendController;
use Sulu\Component\Rest\ListBuilder\Doctrine\FieldDescriptor\DoctrineCaseFieldDescriptor;
{% endblock %}

{% block class_annotations %}
/**
 * @NamePrefix("{{ bundle_prefix }}_")
 */
{% endblock %}
{% block class %}
class {{ entity_class }}Controller extends AbstractBackendController implements ClassResourceInterface
{% endblock %}
{
{% block security_context %}
    /**
     * {@inheritdoc}
     */
    public function getSecurityContext()
    {
        return '{{ bundle_prefix|replace('_', '.') }}.{{ entity_pluralize|lower }}';
    }

{% endblock %}
{% block manager %}
    /**
     * {@inheritdoc}
     */
    public function getManager()
    {
        return $this->get('{{ bundle_prefix }}.manager.{{ entity|lower }}');
    }

{% endblock %}
{% block field_descriptors %}
    /**
     * @param string $locale
     * @param array $filters
     *
     * @return DoctrineCaseFieldDescriptor[] $filters
     */
    public function getFieldDescriptors($locale, $filters)
    {
        $fieldDescriptors = [];

{% for column in metadata.columnNames %}
{% block field_descriptor %}
        $fieldDescriptors['{{ column }}'] = new DoctrineCaseFieldDescriptor(
            '{{ column }}',
            '{{ column }}',
            {{ entity }}::class,
            '{{ bundle_prefix }}.{{ column }}',
            [],
            {{ metadata.singleIdentifierColumnName == column ? 'true' : 'false' }},
            true,
            {{ metadata.typeOfField(column) in ['date', 'datetime'] ? '\'date\'' : '\'\'' }}
        );
{% endblock %}

{% endfor %}
        return $fieldDescriptors;
    }

{% endblock %}
{% block model_class %}
    /**
     * @return string
     */
    public function getModelClass()
    {
        return {{ entity }}::class;
    }
{% endblock %}
}
